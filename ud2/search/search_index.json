{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inici","text":""},{"location":"#resultats-daprenentatge-vinculats-a-la-unitat","title":"Resultats d'aprenentatge vinculats a la unitat","text":"<ul> <li>RA2. Avalua entorns integrats de desenvolupament analitzant les seues caracter\u00edstiques per a editar codi font i generar executables.</li> </ul>"},{"location":"#criteris-davaluacio","title":"Criteris d'avaluaci\u00f3","text":"<ul> <li>RA2.a) S'han instal\u00b7lat entorns de desenvolupament, propietaris i lliures.</li> <li>RA2.b) S'han afegit i eliminat m\u00f2duls en l'entorn de desenvolupament.</li> <li>RA2.c) S'ha personalitzat i automatitzat l'entorn de desenvolupament.</li> <li>RA2.d) S'ha configurat el sistema d'actualitzaci\u00f3 de l'entorn de desenvolupament.</li> <li>RA2.e) S'han generat executables a partir de codi font de diferents llenguatges en un mateix entorn de desenvolupament.</li> <li>RA2.f) S'han generat executables a partir d'un mateix codi font amb diversos entorns de desenvolupament.</li> <li>RA2.g) S'han identificat les caracter\u00edstiques comunes i espec\u00edfiques de diversos entorns de desenvolupament.</li> </ul> <p>Comencem!</p>"},{"location":"annex1_cmd/","title":"Annex 1. Eines b\u00e0siques des de l'int\u00e8rpret d'ordres","text":""},{"location":"annex1_cmd/#linterpret-dordres-i-el-sistema-de-fitxers","title":"L'int\u00e8rpret d'ordres i el sistema de fitxers","text":"<p>La shell del sistema o int\u00e8rpret d'ordres \u00e9s la part del sistema operatiu que ens permet interactuar amb ell a trav\u00e9s d'ordres, de forma completament textual, a trav\u00e9s d'un terminal.</p> <p>Als sistemes GNU/Linux existeixen diverses shells: sh, bash, csh, ksh... per defecte, la shell en Ubuntu \u00e9s bash.</p> <p>Per tal d'accedir a la shell des d'un entorn gr\u00e0fic, ho fem a trav\u00e9s de diverses aplicacions, anomenades emuladors de terminal. Cada entorn gr\u00e0fic utilitza els seus propis emuladors de terminal. Aix\u00ed, Gnome ofereix Gnome Terminal, Mate ofereix Mate Terminal, KDE amb Konsole... </p> <p>En programaci\u00f3, tot i que els entorns de desenvolupament moderns ens permeten crear i executar projectes de forma gr\u00e0fica, sovint resulta m\u00e9s c\u00f2mode realitzar xicotetes modificacions del codi i realitzar el proc\u00e9s de compilaci\u00f3 i construcci\u00f3 de d'aplicacions des de la l\u00ednia d'ordres. Tot i que en sistemes operatius veureu a fons aquesta part del sistema, en aquest document de car\u00e0cter m\u00e9s pr\u00e0ctic anem a veure una xicoteta introducci\u00f3 per moure'ns pel sistema de directoris, crear una estrucutra, i llegir fitxers. M\u00e9s endavant veurem com editar-los, tamb\u00e9 des de la l\u00ednia d'ordres.</p>"},{"location":"annex1_cmd/#acces-a-la-terminal","title":"Acc\u00e9s a la terminal","text":"<p>Per tal d'accedir a la terminal, ho podem fer de diverses formes:</p> <ol> <li> <p>A trav\u00e9s del men\u00fa o el dock del sistema: Generalment en l'apartat d'Eines del sistema.</p> </li> <li> <p>A trav\u00e9s d'estalvis de teclat: Generalment amb la combinaci\u00f3 de tecles <code>Ctrl+Alt+T</code> o b\u00e9 amb <code>Alt+F2</code> i escrivim el nom de l'aplicaci\u00f3.</p> </li> </ol> <p>Una vegada hem acedit a l'emulador de terminal, veurem el prompt del sistema, amb un aspecte semblant al seg\u00fcent:</p> <pre><code>usuari@ordinador:ruta$\n</code></pre> <p>Per exemple:</p> <pre><code>profe@profeDAM:~$\n</code></pre> <p>Com veiem, apareix el nom de l'usuari i de l'ordinador al qu\u00e8 est\u00e0 connectat. Tot seguit veiem el path o cam\u00ed en l'arbre de directoris on ens trobem. En aquest cas, veiem el s\u00edmbol especial <code>~</code>, que representa el directori <code>home</code> o d'inici de l'usuari. Finalment, el s\u00edmbol <code>$</code> ens indica que estem executant  <code>bash</code> com a un usuari del sistema (l'altra opci\u00f3 ser\u00eda el s\u00edmbol <code>#</code> que indicaria que estem com a administradors)</p> <p>B\u00e9, ara ja podem comen\u00e7ar a interactuar amb el sistema. El mecanisme \u00e9s tan f\u00e0cil com escriure l'ordre amb els par\u00e0metres que necessitem, i polsar la tecla intro.</p>"},{"location":"annex1_cmd/#comencant-amb-les-ordres","title":"Comen\u00e7ant amb les ordres","text":"<p>On estem</p> <p>Si utilitzem l'ordre <code>pwd</code>, el prompt ens diu el directori en el qu\u00e8 estem actualment:</p> <pre><code>profe@profeDAM:~$ pwd\n/home/profe\n</code></pre> <p>Com veiem, ens indica que ens trobem a una carpeta anomenada <code>home</code>, i dins d'ella, una carpeta amb el nostre nom d'usuari. El primer s\u00edmbol que apareix \u00e9s la <code>/</code>, o arrel del sistema, a partir del qual s'expandeix tot l'arbre de directoris. El treball d'aqueta pr\u00e0ctica el realitzarem a partir d'aquesta mateixa carpeta d'usuari.</p> <p>Veient el contingut dels directoris</p> <p>L'ordre <code>ls</code>, abreviatura de list, ens mostra el llistat de fitxers i directoris del directori on ens trobem:</p> <pre><code>$ ls\nBaixades   Escriptori  M\u00fasica            Plantilles  V\u00eddeos\nDocuments  Imatges     NetBeansProjects  P\u00fablic\n</code></pre> <p>Com veiem, si no hem creat res m\u00e9s, ens mostra les carpetes i els fitxers que tenim al nostre home.</p> <p>Tamb\u00e9 podem indicar-li a <code>ls</code> de quina carpeta volem que ens mostre els fitxers. Per exemple, si escrivim:</p> <pre><code>$ ls /\nbin    dev   initrd.img      lib64       mnt   root  snap      sys  var\nboot   etc   initrd.img.old  lost+found  opt   run   srv       tmp  vmlinuz\ncdrom  home  lib             media       proc  sbin  swapfile  usr  vmlinuz.old\n</code></pre> <p>Ens mostra el contingut de la carpeta arrel del sistema. Com veieu, a l'arrel apareixen diversos directoris i fitxers, comuns en moltes distribucions GNU/Linux. Aquesta estructura segueix un est\u00e0ndard conegut com FHS FHS (Filesystem Hierarchy Standard), que defineix el contingut que ha d'haver en aquestes carpetes. En unitats posteriors, tornarem a reprendre aquest est\u00e0ndard.</p> <p>Per altra banda, l'ordre <code>ls</code> accepta tamb\u00e9 diverses opcions. Les opcions, generalment indicades amb un <code>-</code> al davant, i separades per espais, serveixen per tal de modificar el comportament de l'ordre. Una opci\u00f3 bastant habitual \u00e9s utilitzar <code>ls -l</code>, per tal d'obtenir un llistat en format llarg, que ens indica, a m\u00e9s del nom de carpetes i directoris, informaci\u00f3 addicional, com els permissos, l'usuari i grup propietari, el tamany i la data de la \u00faltima modificaci\u00f3.</p> <p>Movent-nos per l'arbre de directoris</p> <p>Una altra ordre interessant \u00e9s l'ordre <code>cd</code> (change directory), que com el nom indica, serveix per canviar el directori actual. Per exemple si escrivim:</p> <pre><code>$ cd Baixades\n</code></pre> <p>Accedirem a la carpeta <code>Baixades</code></p> <p>Si ara escrivim:</p> <pre><code>$ cd /\n</code></pre> <p>Accedirem a l'arrel del sistema. Per tal d'accedir al nostre home, podem fer-ho de dos formes:</p> <ul> <li> <p>Indicant la ruta completa:</p> <pre><code>$ cd /home/el_meu_usuari\n</code></pre> </li> <li> <p>Amb l'abreviatura <code>~</code>:</p> <pre><code>$ cd ~\n</code></pre> </li> </ul> <p>Com hem comentat, l'estrucutra de directoris t\u00e9 forma d'arbre. Aix\u00f3 vol dir, que existeix un directori, anomenat arrel, del que naixen tots els directoris, i de cada directori, creixen m\u00e9s directoris, ramificant l'estructura. Quan ens trobem a un directori concret, el directori immediatament anterior en l'estrucutura de directoris s'anomena directori pare (i per analogia, els directoris continguts dins un directori directoris fills). Tant el directori pare com el directori actual dins de cada directori tenen noms especials: <code>..</code> per al directori pare i <code>.</code> per al directori actual (m\u00e9s endavant li veurem m\u00e9s utilitats a aquesta abreviatura).</p> <p>A efectes pr\u00e0ctics, si tenim la seg\u00fcent estructura de directoris:</p> <p><pre><code>moduls/\n|-- EDD\n|-- ISO\n|-- LMI\n\\-- PRG\n</code></pre> Si ens trobem dins el directori EDD, per tornar al directori moduls, farem:</p> <pre><code>$ cd ..\n</code></pre> <p>Un error freq\u00fcent sol ser no posar l'espai entre <code>cd</code> i <code>..</code>. Tingueu-ho en compte.</p> <p>Creaci\u00f3, modificaci\u00f3 i esborrat de carpetes</p> <p>Per tal de crear un directori, fem \u00fas de l'ordre <code>mkdir</code> (make directory), seguida del nom del directori que volem.</p> <p>Per exemple, des del nostre home escrivim:</p> <pre><code>$ mkdir moduls\n</code></pre> <p>per crear la carpeta moduls en la carpeta on estem. Si ara volem crear m\u00e9s carpetes dins d'aquesta, podem fer-ho de dos formes:</p> <ol> <li>Accedint a la carpeta moduls i creant dins d'ella altres carpetes:</li> </ol> <pre><code>$ cd moduls\n$ mkdir EDD\n</code></pre> <ol> <li>Creant les carpetes a partir del directori pare, especificant la ruta:</li> </ol> <pre><code>$ mkdir moduls/EDD\n</code></pre> <p>Per altra banda, \u00e9s interessant tindre en compte el seg\u00fcent:</p> <ul> <li> <p>Podem crear diversos directoris en una maeixa ordre mkdir, indicant-los tots com a arguments separats per espai:</p> <p><pre><code>$ mkdir moduls/EDD moduls/PRG moduls/LMI moduls/ISO\n</code></pre> * Podem crear una estructura completa amb l'opci\u00f3 <code>-p</code> (de path). Per exemple, en lloc de fer:</p> <pre><code>$ mkdir moduls\n$ mkdir moduls/EDD\n$ mkdir moduls/EDD/Practica1\n$ mkdir moduls/EDD/Practica1/part1\n</code></pre> <p>Podem fer directament:</p> <pre><code>$ mkdir -p moduls/EDD/Practica1/part1\n</code></pre> <p>Per a que ens cree l'estructura completa, sense haver de crear pas a pas els directoris intermitjos.</p> </li> </ul> <p>Per altra banda, podem fer \u00fas del que s'anomena expansi\u00f3 de claus, que ens permet generar m\u00faltiples expressions d'una. Per exemple, podem fer:</p> <pre><code>$ mkdir -p moduls/EDD/Practica1/{part1,part2,part3}\n</code></pre> <p>Que ens generar\u00eda la seg\u00fcent estrucutra de directoris:</p> <p><pre><code>moduls/\n\\-- EDD\n    \\-- Practica1\n        |-- part1\n        |-- part2\n        \\-- part3\n</code></pre> Com veieu, quan tenim una miqueta de pr\u00e0ctica, resulta bastant m\u00e9s r\u00e0pid que crear estructures de carpetes mitjan\u00e7ant el navegador de fitxers.</p> <p>Anem a passar ara a esborrar directoris. Per a aix\u00f2, farem \u00fas de l'ordre <code>rmdir</code>, seguida del nom de la carpeta a eliminar. Cal tindre en compte que per tal d'eliminar un directori, aquest ha d'estar buit. En cas contrari, se'ns mostrar\u00e0 el seg\u00fcent error:</p> <pre><code>$ rmdir /tmp/moduls/EDD/Practica1/\nrmdir: failed to remove '/tmp/moduls/EDD/Practica1/': Directory not empty\n</code></pre> <p>En aquest cas, caldria esborrar les carpetes <code>part1</code>, <code>part2</code> i <code>part3</code> per poder esborrar el directori <code>Practica1</code>. Proveu a fer-ho.</p> <p>Altra opci\u00f3, \u00e9s utilitzar l'ordre <code>rm</code>, que serveix per eliminar tant directoris com fitxers, i indicar-li l'argument <code>-r</code> (esborrat recursiu), de la seg\u00fcent forma:</p> <pre><code>$ rm -r /tmp/moduls/EDD/Practica1/\n</code></pre> <p>I per acabar aquesta secci\u00f3, es queda modificar o renomenar el nom dels directoris. Per a aix\u00f2, farem \u00fas de l'ordre <code>mv</code>(move), amb la sintaxi seg\u00fcent:</p> <pre><code>$ mv fitxer_o_directori_original fitxer_o_directori_amb_el_nom_nou\n</code></pre> <p>Per exemple, per renomenar el directori <code>part1</code> com a <code>part01</code>, farem:</p> <pre><code>$ mv moduls/EDD/Practica1/part1/ moduls/EDD/Practica1/part01/\n</code></pre> <p>Consultant el contingut dels fitxers</p> <p>Veiem com consultar el contingut de fitxers. Como que encara no hem creat cap fitxer, anem a fer \u00fas d'un fitxer del sistema, com per exemple puga ser el fitxer <code>/etc/apt/sources.list</code>,on s'indiquen les diferents fonts de programari que tenim configurades al sistema.</p> <p>Per tal de consultar el contingut del fitxer, fem \u00fas de l'ordre <code>cat</code>:</p> <pre><code>$ cat /etc/apt/sources.list\n</code></pre> <p>Com veureu, es tracta d'un fitxer un tant llarg, i per llegir-lo tot, ens haurem de despla\u00e7ar cap amunt amb la barra de despla\u00e7ament lateral. Si volem evitar aix\u00f2, i que ens mostre el resultat paginat, farem \u00fas de l'ordre <code>more</code> en lloc de <code>cat</code>:</p> <pre><code>$ more /etc/apt/sources.list\n</code></pre> <p>Amb a\u00e7\u00f2 veurem tantes l\u00ednies del fitxer com ens c\u00e0piguen en pantalla i podrem despla\u00e7ar-nos cap avall amb la tecla <code>intro</code>, per avan\u00e7ar una l\u00ednia, o la tecla <code>espai</code>, per avan\u00e7ar tantes l\u00ednies m\u00e9s com c\u00e0piguen.</p> <p>El que no podem fer amb <code>more</code> \u00e9s tornar cap amunt en el fitxer. Si volem poder moure'ns amunt i avall pel fitxer, podem fer \u00fas de l'ordre <code>less</code>, de la mateixa manera:</p> <pre><code>$ less /etc/apt/sources.list\n</code></pre> <p>Amb aquesta ordre, a m\u00e9s de l'<code>espai</code> i l'<code>intro</code>, podem utilitzar els cursors amunt i avall per despla\u00e7ar-nos pel document. Per tal de poder eixir del que ens mostra <code>less</code>, hem de pr\u00e9mer la tecla <code>q</code>.</p> <p>Altres ordres interessants per consultar fitxers s\u00f3n <code>head</code> i <code>tail</code>, que ens permeten consultar les primeres i les \u00faltimes l\u00ednies dels fitxers. Podeu consultar-ne l'ajuda (<code>man head</code> o <code>man tail</code>) per veure les diverses opcions que tenen.</p>"},{"location":"annex1_cmd/#taula-ressum-de-les-ordres-tractades","title":"Taula ressum de les ordres tractades","text":"Ordre Significat <code>pwd</code> Mostra el directori on ens trobem actualment <code>ls</code> Mostra el contingut d'un directori <code>ls -l</code> Mostra el contingut d'un directori en format llarg <code>cd directori_o_ruta</code> Accedim al directori indicat <code>cd ~</code> Accedim al nostre home <code>cd ..</code> Accedim al directori pare de l'actual <code>mkdir directori</code> Crea un directori <code>mkdir -p ruta</code> Crea la ruta completa, incloent subdirectoris <code>rmdir directori</code> Elimina un directori buit <code>rm fitxer</code> Elimina fitxer <code>rm -r directori</code> Elimina un directori recursivament <code>mv origen dest\u00ed</code> Mou/Renomena un fitxer o directori <code>cat fitxer</code> Mostra el contingut d'un fitxer <code>more fitxer</code> Mostra el contingut d'un fitxer paginat <code>less fitxer</code> Mostra el contingut d'un fitxer navegable <code>head fitxer</code> Mostra les (10) primeres l\u00ednies del fitex <code>tail fitxer</code> Mostra les (10) \u00faltimes del fitex"},{"location":"annex2_vim/","title":"1. Edici\u00f3 de codi amb vim","text":""},{"location":"annex2_vim/#annex-2-editors-de-fitxers-de-text-vim","title":"Annex 2. Editors de fitxers de text: vim","text":"<p>Quan treballem des de la l\u00ednia d'ordres, sovint cal editar fitxers, b\u00e9 per tal de realitzar alguna modificaci\u00f3 en un programa o directament, per programar a trav\u00e9s de la consola.</p> <p>En apartats posteriors veurem eines per editar els nostres programes dins un entorn gr\u00e0fic, per\u00f2 ara anem a fer \u00fas d'un editor de fitxers en mode text: vim. Tot i que al principi pot resultar una miqueta cost\u00f3s i dur, quan ens acostumem a ell solem ser m\u00e9s productius, ja que ens permet editar fitxers sense moure pr\u00e0cticament els dits del teclat. A m\u00e9s, en algunes ocasions, com quan ens connectem remotament a un ordinador, no disposem d'eines gr\u00e0fiques per a l'edici\u00f3 de text, i aquest tipus d'editors ens poden ser de gran ajuda.</p> <p>Font original</p> <p>Aquesta pr\u00e0ctica es basa en el *webinar Vim, manual de uso b\u00e1sico*, per\u00f2 d'una forma m\u00e9s simplificada. </p>"},{"location":"annex2_vim/#introduccio-a-vim","title":"Introducci\u00f3 a vim","text":"<p>Vim \u00e9s una versi\u00f3 millorada de l'editor vi, el primer editor de text a pantalla completa de sistemes Unix.</p> <p>Si al nostre ordinador no tenim instal\u00b7lat vim, podem fer-ho amb:</p> <pre><code>$ sudo apt-get update\n$ sudo apt-get install vim\n</code></pre> <p>Quan ja disposem del vim instal\u00b7lat al sistema, per tal d'accedir nom\u00e9s haurem d'invocar l'ordre <code>vim</code> des de la terminal. Si no indiquem res, se'ns mostrar\u00e0 informaci\u00f3 sobre algunes ordres b\u00e0siques i sobre la versi\u00f3. El m\u00e9s habitual, per contra, ser\u00e0 invocar vim passant-li el nom de fitxer que volem editar o crear:</p> <pre><code>$ vim fitxer\n</code></pre> <p>Si <code>fitxer</code> existeix, l'obrir\u00e0 per editar-lo, i si no, obrir\u00e0 l'editor en blanc, i guardar\u00e0 el fitxer quan indiquem l'ordre de guardar.</p>"},{"location":"annex2_vim/#modes-de-vim","title":"Modes de Vim","text":"<p>Vim t\u00e9 tres modes principals de treball:</p> <ul> <li>El mode ordres, que ens permet navegar pel document i introdu\u00efr ordres a executar dins el propi fitxer (buscar, reempla\u00e7ar, guardar). En aquest mode no s'interpreten les tecles del teclar pels seus car\u00e0cters, sin\u00f2 per les funcions o ordres assignades a cada tecla. Aquestes ordres seran combinacions de lletres sensible a les maj\u00fascules, i podran anar precedides pel nombre de vegades que desitgem repetir l'acci\u00f3 a executar. Per accedir a aquest mode des de qualsevol altre, polsarem la tecla <code>Esc</code> (escape).</li> <li>El mode ex, que ens permet manipular els fitxers (guardar, eixir, etc.). Per accedir a aquest m\u00e8tode escrivim dos punts <code>:</code> seguit pel nom de l'ordre <code>ex</code> que volem executar. Despr\u00e9s d'executar l'ordre, torna autom\u00e0ticament al mode comando.</li> <li>El mode inserci\u00f3, que serveix per afegir text al fitxer. Per tal d'accedir a aquest mode, des del mode d'ordres, polsem la tecla <code>i</code> (de insert) o b\u00e9 la tecla d'inserci\u00f3 <code>Ins</code>. Per tal de tornar de nou al mode d'ordres, utilitzarem la tecla <code>Esc</code>.</li> </ul>"},{"location":"annex2_vim/#el-mode-dordres","title":"El mode d'ordres","text":"<p>Les ordres de m\u00e9s utilitat en el mode d'ordres s\u00f3n:</p> Ordre Significat h Despla\u00e7ament cap a  l'esquerra (igual que el cursor) l Despla\u00e7ament cap a la dreata (igual que el cursor) j Despla\u00e7ament cap avall (igual que el cursor avall) k Despla\u00e7ament cap amunt (igual queel cursos cap amunt) w Despla\u00e7a una paraula a la dreta b Despla\u00e7a una paraula a  l'esquerra 0 Mou el cursor al principi de la l\u00ednia actual $ Mou el cursos al final de la l\u00ednia actual i Permet passar a mode d'inserci\u00f3, i comen\u00e7ar a escriure text en la posici\u00f3 actual del cursor I Permet passar a mode d'inserci\u00f3, i comen\u00e7ar a escriure text a principi de la l\u00ednia en qu\u00e8 ens trobem O Permet passar a mode d'inserci\u00f3, afegint una l\u00ednia en blanc davant d'on estem, per comen\u00e7ar a escriure o Permet passar a mode d'inserci\u00f3, afegint una l\u00ednia en blanc despr\u00e9s d'on estem, per comen\u00e7ar a escriure dd Retalla la l\u00ednia actual, i la deixa al portapapers P Apega el contingut del portapapers en la l\u00ednia d'abans d'on ens trobem p Apega el contingut del portapapers en la l\u00ednia de despr\u00e9s d'on ens trobem u Desf\u00e0 l'\u00faltima ordre n Troba la seg\u00fcent coincid\u00e8ncia en una b\u00fasqueda n Troba la coincid\u00e8ncia anterior en una b\u00fasqueda :w Guarda el fitxer actual. Amb <code>:w Fitxer</code> el guarda amb altre nom :q Ix de Vim si no hi ha canvis pendents al fitxer :q! Ix de Vim encara que hi hagen canvis pendents al fitxer :wq Guarda els canvis i ix de Vim :n\u00famero Va directament al n\u00famero de l\u00ednia indicat <p>Buscar i reempla\u00e7ar text</p> <p>Per tal de buscar i reempla\u00e7ar text en vim, fem \u00fas de <code>/</code>, que porta el cursor directament a la ubicaci\u00f3 que li indiquem. A m\u00e9s, tamb\u00e9 podem indicar fent \u00fas de <code>%s</code> que reemplace text. De forma ressumida, tenim:</p> Ordre Significat /patr\u00f3 Busca el patr\u00f3 en el fitxer a mesura que escrivim :/patr\u00f3 Busca el patr\u00f3 en el text. Cal que donem a la tecla intro per comencar a buscar :%s/patr\u00f3/text Busca el patr\u00f3 i el reempla\u00e7a pel text indicat, %s indica que busca en tot el document :%s/patr\u00f3/text/gc Com l'anterior, per\u00f2 ara ens demanar\u00e0 confirmaci\u00f3 <p>Quan busquem un text per reempla\u00e7ar-lo amb <code>gc</code> ens demana confirmaci\u00f3, donant diverses opcions:</p> <ul> <li><code>y</code>: Confirma l'acci\u00f3</li> <li><code>n</code>: No fa la substituci\u00f3 i segueix buscant</li> <li><code>a</code>: Confirmem l'acci\u00f3 per a totes le seg\u00fcents coincid\u00e8ncies</li> <li><code>q</code>: Aturem la b\u00fasqueda</li> <li><code>l</code>: Confirmem la substituci\u00f3 i parem la b\u00fasqueda, tornant al mode editor</li> <li><code>Ctrl+e</code>: Avancem cap avall en el document per localitzar el context de la coincid\u00e8ncia</li> <li><code>Ctrl+y</code>: Retrocedim per localitzar el context de la coincid\u00e8ncia</li> </ul>"},{"location":"code/","title":"1. Edici\u00f3 amb VSCode","text":""},{"location":"code/#entorns-integrats-de-denvolupament","title":"Entorns Integrats de Denvolupament","text":"<p>El desenvolupament d'aplicacions inform\u00e0tiques implica diverses tasques relacionades entre si: codificaci\u00f3, compilaci\u00f3, depuraci\u00f3 o realitzaci\u00f3 de proves. Cadascuna d'aquestes tasques requereix aplicacions espec\u00edfiques: editors de codi, compiladors o depuradors, entre d'altres.</p> <p>Els entorns de desenvolupament integrats (IDE) s\u00f3n aplicacions inform\u00e0tiques que integren gran part d'aquestes eines.</p> <p>En aquesta unitat, anirem veien a mesura que comencem a utilitzar-los diferents entorns i quines possibilitats ens ofereixen. Comen\u00e7arem amb VSCode, que, tot i no tractar-se d'un IDE en s\u00ed mateix, ofereix moltes de les eines que aquests ofereixen, i s'utilitza en molts \u00e0mbits de desenvolupament.</p> <p>A la unitat disposeu de dos annexos:</p> <ul> <li>L'annex I, que us presenta, de manera ressumida i pr\u00e0ctica les eines que necessitareu per treballar de forma eficient des del sistema de fitxers, i</li> <li>L'annex II, que us presenta l'eina vim, un editor de text des de la l\u00ednia d'ordres, molt utilitzat quan no disposem d'entorn gr\u00e0fic.</li> </ul>"},{"location":"code/#introduccio-a-visual-studio-code","title":"Introducci\u00f3 a Visual Studio Code","text":"<p>Visual Studio Code \u00e9s un editor de codi lleuger multiplataforma, de gran popularitat en el m\u00f3n del desenvolupament multiplataforma en general i de serveis i web en particular. Per defecte suporta llenguatges com JavaScript, TypeScript i Node.js, i \u00e9s extensible a altres llenguatges, com C++, C#, Java, Python, etc.</p> <p>D'entre les principals caracter\u00edstiques de l'editor, podem destacar:</p> <ul> <li>Ofereix una interf\u00edcie simple i neta.</li> <li>Disposa d'una paleta d'ordres des d'on podem accedir a totes les opcions de l'editor.</li> <li>Ofereix una terminal integrada.</li> <li>Ofereix suport a Git per al control de versions.</li> <li>Integra Emmet (Zen Coding), per generar codi web de forma \u00e0gil.</li> <li>Cursors m\u00faltiples, per a l'edici\u00f3 massiva de codi.</li> <li>F\u00e0cilment personalitzable a trav\u00e9s d'un fitxer JSON.</li> <li>Autocompletat i ressaltat de sintaxi amb IntelliSense.</li> <li>Suporta un gran nombre de temes i extensions que amplien la seua funcionalitat.</li> </ul> <p>Tamb\u00e9 cal remarcar que no es tracta d'un entorn de desenvolupament (IDE) com a tal, com puga ser Eclipse, Netbeans o IntelliJ, pel que no ofereix tota la funcionalitat que ofereixen aquests (construcci\u00f3, compilaci\u00f3, depuraci\u00f3, frameworks). Tot i aix\u00f2, es tracta d'un entorn molt m\u00e9s lleuger que aquests, i que amb les extensions adequades, podem fer que la seua funcionalitat siga pr\u00e0cticament la mateixa que ofereix un IDE.</p>"},{"location":"code/#descarrega-i-installacio-de-vs-code","title":"Desc\u00e0rrega i instal\u00b7laci\u00f3 de VS Code","text":""},{"location":"code/#installacio-de-vscode","title":"Instal\u00b7laci\u00f3 de VSCode","text":"<p>Podeu descarregar VSCode des de la seua web https://code.visualstudio.com/, tant en format .deb (per a Debian/Ubuntu) com en format .rpm (Fedora) o exe (Windows.)</p> <p>En el cas de GNU/Linux, aix\u00f2 ens afig el fitxet <code>/etc/apt/sources.list.d/vscode.list</code> al sistema, de manera que el sistema estar\u00e0 assabentat quan hi haja una versi\u00f3 nova de l'eina.</p> <p>Instal\u00b7laci\u00f3 manual</p> <p>Si voleu fer la instal\u00b7laci\u00f3 de forma manual, disposeu de la informaci\u00f3 necess\u00e0ria en: * https://code.visualstudio.com/docs/setup/linux * https://code.visualstudio.com/docs/setup/windows</p>"},{"location":"code/#presa-de-contacte-amb-vscode","title":"Presa de contacte amb VSCode","text":"<p>Una vegada instal\u00b7lat, tenim el Visual Studio Code accessible des del men\u00fa principal del sistema, dins de Programaci\u00f3.</p> <p>Quan l'obrim, veurem una interf\u00edcie semblant a la figura seg\u00fcent, a la que podem distingir:</p> <p></p> <ul> <li>La barra d'activitats, situada a l'esquerra, amb cinc activitats principals: L'explorador de fitxers, la de B\u00fasqueda de text, la de control de versions amb Git, la de depuraci\u00f3, i la d'extensions. Cadascuna d'aquestes activitats, ens obrir\u00e0 una altra barra lateral al costat amb les diferents possibilitats que ofereix l'activitat.</li> <li>La finestra de benvinguda, situada a la part principal de l'editor, que ocupa la part superior, i que ens ofereix algunes opcions d'inici com crear un fitxer nou, obrir una carpeta o afegir un espai de treball. A m\u00e9s, disposem tamb\u00e9 d'una secci\u00f3 de fitxers recents, inicialment buida, i de diversos opcions de personalitzaci\u00f3, com extensions per suportar alters llenguatges, dreceres de teclat, i tem\u00e0tica de l'editor. En aquesta finestra, tamb\u00e9 disposem d'algunes opcions d'Ajuda, i alguns tips per aprendre, com la llista d'ordres o una ullada a la interf\u00edcie.</li> <li>Diversos panells, situats al davall de la finestra principal de l'editor, i que mostraran informaci\u00f3 sobre la depuraci\u00f3, errors, avisos, o b\u00e9 la terminal integrada a VSCode.</li> <li>A la part inferior, distingim finalment la barra d'estat, amb informaci\u00f3 sobre el projecte i els fitxers oberts.</li> </ul> <p>Disposeu de m\u00e9s informaci\u00f3 sobre la interf\u00edcie de VSCode en:</p> <ul> <li>https://code.visualstudio.com/docs/getstarted/userinterface</li> </ul>"},{"location":"code/#installacio-de-plugins-en-vscode","title":"Instal\u00b7laci\u00f3 de plugins en VSCode","text":"<p>Com hem comentat, VSCode \u00e9s un editor lleuger, i alhora extremadament flexible mitjan\u00e7ant plugins. A banda de suportar altres llenguatges de programaci\u00f3, tamb\u00e9 ens permet extensions, per treballar, per exemple amb el llenguatge Markdown.</p> <p>Per a aix\u00f2, fem clic a l'activitat d'extensions, ubicada cap a la part inferior de la barra d'activitats, i al quadre de cerca d'extensions escrivim Markdown.</p> <p></p> <p>Veurem que ens apareix gran quantitat d'extensions per a Markdown. Podeu donar un cop d'ull a totes elles, per\u00f2 de moment, instal\u00b7larem l'extensi\u00f3 <code>markdownlint</code>, que ens ajuda a comprovar la correcta sintaxi del codi Markdown i ens ofereix la possibilitat de previsualitzar el resultat al temps que escrivim. Per a aix\u00f2, nom\u00e9s haurem de fer click en el bot\u00f3 <code>Install</code> que apareix b\u00e9 al costat de l'extensi\u00f3 o en la descripci\u00f3 d'aquesta`. Si ho desitgeu, podeu instal\u00b7lar tamb\u00e9 l'extensi\u00f3 Markdown PDF que us permet guardar els fitxers creats en format md a pdf.</p> <p>Per tal de comen\u00e7ar a treballar amb algun exemple, podem anar a l'activitat de l'Explorador de fitxers i pr\u00e9mer el bot\u00f3 Open Folder per tal d'obrir una carpeta de treball, o fer-ho directament a trav\u00e9s del men\u00fa File &gt; Open Folder.</p> <p>Aix\u00ed doncs, podeu obrir la carpeta on ten\u00edeu les primeres pr\u00e0ctiques amb Markdown. Comproveu si el VSCode us detecta alguna incorrecci\u00f3 i quines sugger\u00e8ncies us fa per corregir-les. Fixeu-vos tamb\u00e9 en qu\u00e8 ha aparegut una icona a la part superior dreta de la finestra d'edici\u00f3, amb una lupa davant una finestra, que ens serivr\u00e0 per dividir la vista de l'editor i veure a la part dreta el resultat del qu\u00e8 estem escrivint en Markdown.</p> <p>Per altra banda, doneu una ullada a les possibilitats que ens ofereix el gestor de fitxers: navegar per la carpeta, buscar fitxers o carpetes,i crear tant fitxers com carpetes noves dins l'estructura en la qu\u00e8 estem.</p>"},{"location":"code/#vscode-i-html","title":"VSCode i HTML","text":"<p>Visual Studio Code proporciona un suport b\u00e0sic per treballar amb HTML. Hi ha ressaltat de sintaxi, completat intel\u00b7ligent amb IntelliSense (suggeriments, etiquetes de tancament, etc.) i format personalitzable.</p> <p>A m\u00e9s, els diferents elements HTML que afegim a un document ens permetran navegar entre els nodes DOM (Model d'Objectes del Doument), i treballar amb CSS i JS incroustats.</p> <p>Si voleu m\u00e9s informaci\u00f3 al respecte, podeu consultar la documentaci\u00f3 oficial de VSCode per a HTML.</p>"},{"location":"code/#previsualitzacio","title":"Previsualitzaci\u00f3","text":"<p>A difer\u00e8ncia del que ocorre amb Markwown, no tenim una previsualitzaci\u00f3 espec\u00edfica d'all\u00f2 que gem amb HTML. Si voleu previsualitzar els documents HTML, podem fer \u00fas de l'extensi\u00f3 live Preview:</p> <p></p> <p>Aquesta extensi\u00f3 ens afig un servidor web local, per tal de previsualitzar els projectes web. Per fer la previsualitzaci\u00f3, farem \u00fas de la mateixa icona que per a Markdown: la icona a la part superior dreta amb la pantalla partida i la lupa.</p>"},{"location":"python/","title":"1. Edici\u00f3 amb VSCode","text":""},{"location":"python/#vscode-i-python","title":"VSCode i Python","text":"<p>Per tal de crear i depurar codi en python necessitem les extensions de Python i Python Debugger:</p> <p></p> <p></p> <p>Des de VSCode, de manera nativa podem inspeccionar variables o establir punts d'interrrupci\u00f3, que s\u00f3n tasques de depuraci\u00f3 independents del llenguatge.</p>"},{"location":"python/#depurant-codi","title":"Depurant codi","text":"<p>De manera predeterminada, el depurador utilitza el mateix int\u00e8rpret seleccionat a l'espai de espai de treball, igual que altres funcions de l'extensi\u00f3 Python per a VS Code. PPer utilitzar un int\u00e8rpret diferent per a la depuraci\u00f3 espec\u00edficament, podriem fer-ho configurant el fitxer <code>launch.json</code>.</p> <p>Per depurar un script de python, la manera m\u00e9s senzilla \u00e9s seleccionar la fletxa cap avall al costat del bot\u00f3 d'execuci\u00f3 de l'editor i seleccionar Python Debugger: Debug Python File.</p> <p>Quan estem depurant, podem veure a la part superior les opcions habituals de depuraci\u00f3 Continue, Step Over, Step Into, o Step Out:</p> Opci\u00f3 de depuraci\u00f3 Significat Quan s'usa Continue Indica al depurador que continue l'execuci\u00f3 del programa fins que arribe al seg\u00fcent punt d'interrupci\u00f3 (breakpoint) o fins que el programa acabe. Auan vols seguir l'execuci\u00f3 completa sense anar pas a pas. Step Over Executa la l\u00ednia actual de codi, per\u00f2 si aquesta l\u00ednia cont\u00e9 una funci\u00f3, el depurador executa la funci\u00f3 completament sense entrar dins d'ella. Despr\u00e9s, avan\u00e7a a la seg\u00fcent l\u00ednia de codi dins del mateix nivell. Quan no t'interessa el detall del que passa dins d'una funci\u00f3 i nom\u00e9s vols veure el resultat final i com afecta el flux global. Step Into Executa la l\u00ednia actual de codi. Si aquesta l\u00ednia cont\u00e9 una funci\u00f3, el depurador entra dins d'aquesta funci\u00f3 i continua depurant pas a pas dins de la funci\u00f3. Quan vols veure com s'executa cada l\u00ednia d'una funci\u00f3, seguint el seu flux de manera detallada. Step Out Si est\u00e0s dins d'una funci\u00f3, aquesta opci\u00f3 permet que el depurador continue executant fins que acabe la funci\u00f3 actual i torne al nivell superior (la funci\u00f3 que la va cridar). Quan ja no t'interessa seguir la depuraci\u00f3 dins d'una funci\u00f3 i vols veure qu\u00e8 passa despr\u00e9s de sortir d'ella. <p>Informaci\u00f3 addicional</p> <p>Disposeu de m\u00e9s informaci\u00f3 a l'article Getting Started with Python in VS Code.</p>"},{"location":"python/#quaderns-interactius-jupyter-notebooks","title":"Quaderns interactius. Jupyter Notebooks","text":"<p>El desenvolupament amb Python compta amb una eina molt interessant: Els quaderns. Un quadern en python es pot definir com un entorn interactiu en el que podem executar blocs de codi i afegir \u00e0rees de documentaci\u00f3, per tal d'explicar el propi codi i la l\u00f2gica d'aquest. Els quaderns, a m\u00e9s, tamb\u00e9 poden incloure equacions o representacions gr\u00e0fiques.</p> <p>Els quaderns poden generar-se i executar-se de diverses formes, b\u00e9 dins un entorn online o b\u00e9 de manera local, fent \u00fas d'eines com Jupyter Notebook o el propi VSCode.</p>"},{"location":"python/#installacio-dels-paquets-i-extensions-necessaries","title":"Instal\u00b7laci\u00f3 dels paquets i extensions necess\u00e0ries","text":"<p>Per tal d'utilitzar Jupyter Notebook en VSCode necessitem per una banda el paquet <code>ipykernel</code> en l'entorn que anem a treballar, a m\u00e9s de la pr\u00f2pia extensi\u00f3 de Jupyter Notebook per a VSCode.</p> <p>Per tal d'instal\u00b7lar el paquet <code>ipykernel</code> nom\u00e9s caldr\u00e0 activar l'entorn on el desitgem instal\u00b7lar, per exemple el que vam crear per a mkdocs:</p> <pre><code>usuari@host:~$ source ~/.local/mkdocsenv/bin/activate\n</code></pre> <p>I fer la instal\u00b7laci\u00f3 d'aquest amb <code>pip</code>:</p> <pre><code>(mkdocsenv) usuari@hist:~$ pip install ipykernel\n</code></pre> <p>Amb aix\u00f2 descarregar\u00e0 tots els paquets necessaris per a l'execuci\u00f3 de quaderns de Jupyter en l'entorn escollit, en aquest cas, el mkdocsenv (o si ho desitgeu, podeu generra altre entorn).</p> <p>Anem ara amb les extensions de VSCode per a Jupyter. Si ja tenim instal\u00b7lat l'editor al nostre equip, podem instal\u00b7lar l'extensi\u00f3 Jupyter:</p> <p></p> <p>Aquesta extensi\u00f3 \u00e9s un pack compost per quatre extensions: Jupyter Keymap, per a les dreceres de teclat de Jupyter, Jupyter Notebook Renderers, per a la visualitazaci\u00f3 dels quaderns, Jupyter Slide Show, per al suport de diapositives i Jupyter Cell Tags, per tal de donar suport a certs paquets que requereixen d'etiquetes a les cel\u00b7les.</p> <p>\u00c9s interessant que feu una ullada a la descripci\u00f3 de l'extensi\u00f3 en s\u00ed per tal de veure totes les seues possibilitats.</p>"},{"location":"python/#creant-quaderns-interactius","title":"Creant quaderns interactius","text":"<p>Com hem dit, un quadern \u00e9s un entorn interactiu on podem escriure codi i documentar-lo. L'organitzaci\u00f3 dels continguts del quadern ser\u00e0 a base de blocs.</p> <p>L'extensi\u00f3 dels quaderns \u00e9s <code>.ipynb</code>, que prov\u00e9 de la denominaci\u00f3 anterior iPython notebooks.</p> <p>Si volem crear un quadern, creem un fitxer amb aquesta extensi\u00f3, per exemple <code>proves.ipynb</code>. Tamb\u00e9 podem fer-ho amb la paleta d'ordres (`Ctrl + Shift + P) i escriure Create: New Jupyter Notebook.</p> <p>Una vegada creat, el podem obrir amb VSCode i ens mostrar\u00e0 un fitxer en blanc amb l'opci\u00f3 d'afegir diferents blocs, b\u00e9 de codi o de contingut.</p> <p></p> <p>Els blocs de contingut s'expressen en llenguatge Markdown, i els blocs de codi font, tot i que s'admeten altres llenguatges, es generaran amb Python. Per tal d'afegir algun d'aquests blocs, farem clic al bot\u00f3 <code>+</code> ubicat al seu costat.</p> <p>Per exemple, anem a afegir un bloc Markdown, amb el seg\u00fcent contingut:</p> <pre><code># Exemple 1\n\nAquest \u00e9s un text markdown d'exemple, anem a fer un simple *Hola m\u00f3n* en Python.\n</code></pre> <p>Si ara deixem d'editar, amb el primer bot\u00f3 de la barra que apareix a la part superior del quadre:</p> <p></p> <p>Veurem com el bloc es renderitza, i es visualitza amb els formats que hem incl\u00f2s al text:</p> <p></p> <p>En el panell de botons de la part superior del quadre, a m\u00e9s de l'opci\u00f3 d'aturar l'edici\u00f3 podem veure altres opcions com dividir la cel\u00b7la, realitzar accions d'edici\u00f3 sobre ella, combinar-la o afegir noves cel\u00b7les tant dalt com baix, entre d'altres opions.</p> <p>Si ara afegim un bloc de codi amb python, amb el bot\u00f3 <code>+ C\u00f3digo</code>, podem incorporar codi python, per exemple un senzill Hola M\u00f3n:</p> <pre><code>print (\"Hola M\u00f3n\")\n</code></pre> <p>:::note Recursos</p> <p>Disposeu del quadern exemple1.PytonWidgets.ipynb amb el que anem a treballar en aquet apartat. Feu clic amb el bot\u00f3 dret i seleccioneu \"Anomena i desa el contingut de l'enlla\u00e7\" :::</p>"},{"location":"python/#execucio-del-codi","title":"Execuci\u00f3 del codi","text":"<p>Per tal d'executar el codi necessitarem un Kernel de Python, que podem trobar b\u00e9 en el nostre sistema, en algun entorn de Python o en el n\u00favol. Per tal de seleccionar el kernel, ho fem des de l'opci\u00f3 corresponent a la part superior dreta de VSCode:</p> <p></p> <p>Com veiem, podem escollir entre un entorn de Python (a nivell local) o un servidor de Jupyter (a trav\u00e9s d'una URL).</p> <p>Si seleccionem Entorns de Python ens d\u00f3na a triar entre els diferents entorns, entre els que trobem la instal\u00b7laci\u00f3 de Python del propi sistema, l'entorn de base de Conda, o l'entorn de proves que hem creat:</p> <p></p> <p>En principi, podem triar quasevol Kernel, sempre i quan treballe amb Python3 i tinga instal\u00b7lat el paquet ipykernel. Seleccionem doncs, l'entorn amb qu\u00e8 volguem treballar, de manera que a la part superior dreta el veiem ja seleccionat (a l'exemple apareix un entorn anomenat base):</p> <p></p> <p>Si tot va b\u00e9, podem fer clic en el bot\u00f3 amb el triangle del costat de la cel\u00b7la amb codi per executar aquesta, o b\u00e9 pr\u00e9mer Shift + Enter:</p> <p></p> <p>Amb la qual cosa, s'executar\u00e0 dins l'entorn el codi de la cel\u00b7la.</p> <p>Important!</p> <p>El codi que creem dins les diferents cel\u00b7les estar\u00e0 relacionat entre s\u00ed, de manera que podem, per exemple definir variables, classes o funcions en un bloc de codi, i fer \u00fas d'elles en altres blocs de codi.</p> <p>!!! warning \"Compte!     Si executem el codi en un entorn que no disposa del paquet <code>ipykernel</code>, ens donaria error. No obstant aix\u00f2, el propi entorn ens avisa que per executar-se en un entorn, ha de tindre instal\u00b7lat <code>ipykernel</code>, i que aquest ser\u00e0 instal\u00b7lat quan l'activem.</p>"},{"location":"python/#altres-opcions-dexecucio","title":"Altres opcions d'execuci\u00f3","text":"<p>A banda d'executar el contingut de la cel\u00b7la, Jupyter ens permet realitzar diverses accioins amb l'execuci\u00f3, que tenim accessibles tant a la part superior de l'editor com de manera flotant en la pr\u00f2pia cel\u00b7la:</p> <p></p> <p>Com veiem, tenim l'opci\u00f3 d'executar totes les cel\u00b7les de codi o esborrar totes les eixides</p> <p></p> <p>I des d'aci podem executar l\u00ednia per l\u00ednia, els blocs fins el bloc actual, o els blocs a partir del  bloc actual.</p>"}]}