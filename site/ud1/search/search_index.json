{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inici","text":""},{"location":"#resultats-daprenentatge-vinculats-a-la-unitat","title":"Resultats d'aprenentatge vinculats a la unitat","text":"<ul> <li>RA1. Reconeix els elements i eines que intervenen en el desenvolupament d'un programa inform\u00e0tic, analitzant les seues caracter\u00edstiques i les fases en les quals actuen fins a arribar a la seua posada en funcionament.</li> </ul>"},{"location":"#criteris-davaluacio","title":"Criteris d'avaluaci\u00f3","text":"<ul> <li>RA1.a) S'ha reconegut la relaci\u00f3 dels programes amb els components del sistema inform\u00e0tic: (mem\u00f2ria, processador, perif\u00e8rics, entre altres.</li> <li>RA1.b) S'han identificat les fases de desenvolupament d'una aplicaci\u00f3 inform\u00e0tica.</li> <li>RA1.c) S'han diferenciat els conceptes de codi font, objecte i executable.</li> <li>RA1.d) S'han reconegut les caracter\u00edstiques de la generaci\u00f3 de codi intermedi per a la seua execuci\u00f3 en m\u00e0quines virtuals.</li> <li>RA1.e) S'han classificat els llenguatges de programaci\u00f3, identificant les seues caracter\u00edstiques.</li> <li>RA1.f) S'ha avaluat la funcionalitat oferida per les eines utilitzades en el desenvolupament de programari.</li> <li>RA1.g) S'han identificat les caracter\u00edstiques i escenaris d'\u00fas de les metodologies \u00e0gils de desenvolupament de programari.</li> </ul> <p>Comencem!</p>"},{"location":"1.programes_informatics/","title":"1. Programes inform\u00e0tics","text":""},{"location":"1.programes_informatics/#programes-informatics","title":"Programes inform\u00e0tics","text":"<p>En la societat del coneixement en qu\u00e8 vivim, el tractament de la informaci\u00f3 juga un paper de gran import\u00e0ncia en tots els \u00e0mbits: industrial, social, dom\u00e8stic, etc\u00e8tera. Tota aquesta informaci\u00f3 que ens envolta \u00e9s emmagatzemada i processada per sistemes inform\u00e0tics. La part d'aquests sistemes encarregada del tractament de la informaci\u00f3 \u00e9s el que es coneix com a software.</p> <p>En aquest apartat introductori, abordarem els conceptes de programa inform\u00e0tic i software, aix\u00ed com la seua funci\u00f3 dins d'un sistema inform\u00e0tic. Per a aix\u00f2, ens basarem en algunes definicions proposades en els est\u00e0ndards de l'IEEE/ISO/IEC (Institut d'Enginyers El\u00e8ctrics i Electr\u00f2nics; Organitzaci\u00f3 Internacional per a la Normalitzaci\u00f3 i Comissi\u00f3 Electr\u00f2nica Internacional), dedicades a la creaci\u00f3 i difusi\u00f3 d'est\u00e0ndards.</p>"},{"location":"1.programes_informatics/#software-i-programes-informatics","title":"Software i programes inform\u00e0tics","text":"<p>Segons l'est\u00e0ndard internacional ISO/IEC/IEEE 24765:2017, un programa inform\u00e0tic es defineix com:</p> <ol> <li>Una combinaci\u00f3 d'instruccions i definicions de dades que permeten al maquinari de l'ordinador realitzar funcions computacionals o de control.</li> <li>Una unitat sint\u00e0ctica que s'ajusta a les regles d'un llenguatge de programaci\u00f3 en particular, i que es compon de declaracions i sent\u00e8ncies o instruccions necess\u00e0ries per a realitzar determinada funci\u00f3, tasca o soluci\u00f3 d'un problema.</li> </ol> <p>En aquestes dues accepcions, cal remarcar que es tracta de combinaci\u00f3 d'instruccions o sent\u00e8ncies, aix\u00ed com de definicions o declaracions de dades. Es podria establir un s\u00edmil entre un programa d'ordinador i una recepta de cuina. En aquesta \u00faltima, s'indiquen per una part els ingredients (dades en un programa d'ordinador), i per altra els passos ordenats (instruccions) que s'han de seguir per a treballar els ingredients (dades).</p> <p>Per altra banda, el software es defineix en aquest mateix est\u00e0ndard com:</p> <ol> <li>Programes inform\u00e0tics, procediments i possible documentaci\u00f3 associada i dades relacionades amb el funcionament d'un sistema inform\u00e0tic.</li> <li>Tot o part dels programes, procediments, regles i documentaci\u00f3 associada d'un sistema de processament de la informaci\u00f3.</li> <li>Programa o conjunt de programes utilitzats per a fer funcionar un ordinador.</li> </ol> <p>Com podem comprovar, el concepte de software, a m\u00e9s dels programes, inclou un altre tipus de contingut, com pot ser la documentaci\u00f3 i altres tipus de dades (imatges, icones, fitxers de configuraci\u00f3, etc\u00e8tera).</p> <p>El terme software o programari es complementa amb el de hardware o maquinari per a compondre el que seria un sistema inform\u00e0tic. El maquinari fa refer\u00e8ncia a all\u00f2 f\u00edsic i tangible, que podem tocar, mentre que el software seria la part intangible. En les diferents accepcions que ens proporciona l'IEEE, es remarca la relaci\u00f3 entre aquests, i se'ns indica que el software \u00e9s el que fa funcionar el maquinari o sistema inform\u00e0tic. Com veiem, es tracta de termes complementaris, ja que un sense l'altre no tenen sentit. Per altra banda, altres autors tamb\u00e9 inclouen un tercer element en el sistema inform\u00e0tic, el que afecta al component hum\u00e0 d'aquest o peopleware, i que abasta tots els aspectes relacionats amb el paper de les persones tant en el desenvolupament com en l'\u00fas de software i maquinari.</p> <p>Quan parlem de software, tamb\u00e9 \u00e9s com\u00fa fer una classificaci\u00f3 d'aquest en dos grans blocs, el software de sistema i el software d'aplicaci\u00f3. Vegem a qu\u00e8 es refereix cadascun d'ells segons les definicions de l'IEEE 24765, incloent tamb\u00e9 el software de suport:</p> <ul> <li>Software de sistema: Software dissenyat per a facilitar el funcionament i manteniment d'un sistema inform\u00e0tic i els seus programes associats. Seria software de sistema, per exemple, els sistemes operatius, les utilitats del sistema o els drivers.</li> <li>Software d'aplicaci\u00f3: Software dissenyat per a ajudar l'usuari a realitzar tasques concretes o a resoldre determinats tipus de problemes. Es tracta de les aplicacions en si, i contemplarien software com els processadors de text, fulls de c\u00e0lcul, aplicacions de disseny, videojocs, etc.</li> <li>Software de suport: Es tracta del software dedicat al desenvolupament i manteniment d'altre software, com ara els compiladors, int\u00e8rprets o editors, entre d'altres.</li> </ul>"},{"location":"1.programes_informatics/#algorismes-i-la-seua-representacio","title":"Algorismes i la seua representaci\u00f3","text":"<p>Com hem vist, un programa \u00e9s una combinaci\u00f3 d'ordres o instruccions que poden ser processades per un ordinador, i que generalment, tenen com a finalitat facilitar o automatitzar algun procediment que sense ells seria bastant tedi\u00f3s.</p> <p>Aquests procediments s'expressen mitjan\u00e7ant el que coneixem com a algoritmes, que segons l'IEEE es defineix com:</p> <ol> <li>Conjunt finit de regles ben definides per a la soluci\u00f3 d'un problema en un nombre finit de passos.</li> <li>Seq\u00fc\u00e8ncia d'operacions per a realitzar una tasca espec\u00edfica.</li> </ol> <p>Per exemple, i tornant a la nostra analogia gastron\u00f2mica, l'algorisme per a preparar una paella ser\u00eda</p> <p>Dades:</p> <ul> <li>400 gr. d\u2019arr\u00f2s de Sueca.</li> <li>800 gr. de pollastre.</li> <li>400 gr. de conill.</li> <li>1 dotzena de \u201cvaquetes\u201d (caragols).</li> <li>400 gr. de garrof\u00f3.</li> <li>150 gr. de tavella.</li> <li>300 gr. de bajoqueta.</li> <li>oli d\u2019oliva.</li> <li>1 gra d\u2019all pelat i picat.</li> <li>1 tomaca madura triturada.</li> <li>1 cullerada de pebre roig.</li> <li>safr\u00e0 en brins, sal, rameta de romer (optatiu).</li> </ul> <p>Procediment:</p> <ol> <li>Tallem el pollastre i el conill a trossos regulars, els salem, posem l\u2019oli a calfar en la paella i el sofregim molt b\u00e9 i lentament els trossos de carn.</li> <li>Una vegada sofregida la carn, afegim la verdura i la sofregim.</li> <li>A continuaci\u00f3 s\u2019afig l\u2019all, el pebre roig i la tomaca.</li> <li>Seguidament se li afigen 2 litres d\u2019aigua, els caragols enganyats al sol. Tot aix\u00f2 es deixa coure durant 10 minuts.</li> <li>Despr\u00e9s es posen els brins de safr\u00e0 i l\u2019arr\u00f2s repartit per tota la superf\u00edcie de la paella i es deixa coure a foc molt viu durant 8 minuts.</li> <li>A continuaci\u00f3 es lleva el foc amb la finalitat que es coga a foc lent durant 10 minuts m\u00e9s, perqu\u00e8 agafe el punt de socarrat.</li> </ol> <p>Com veiem, es tracta d'una representaci\u00f3 de la recepta en llenguatge natural. Tal com veureu en el m\u00f2dul de programaci\u00f3, els algoritmes es poden expressar d'una manera m\u00e9s propera a l'ordinador mitjan\u00e7ant el que es coneix com a pseudocodi, i tamb\u00e9 de forma gr\u00e0fica, b\u00e9 mitjan\u00e7ant diagrames de flux o mitjan\u00e7ant diagrames d'activitats en UML.</p> <p>Com veurem en els seg\u00fcents apartats, una vegada tenim definit l'algoritme que resol un problema, ja siga de forma gr\u00e0fica o en pseudocodi, passarem a la seua codificaci\u00f3 en determinat llenguatge de programaci\u00f3.</p> <p>Un algoritme per a saltar el riu</p> <p>Una granota es troba a la vora d'un riu, i vol creuar a la vora oposada saltant sobre les pedres.</p> <p></p> <p>Suponent que les operacions que pot realitzar la granota s\u00f3n:</p> <ul> <li> <p>Saltar 1, 2 o 3 posicions</p> </li> <li> <p>Girar 90\u00ba a esquerra o dreta</p> </li> </ul> <p>Quin seria l'algoritme o s\u00e8rie de passos que hauria de realitzar per a arribar a l'altre extrem.</p> Soluci\u00f3 <p>Si la granota es troba ja mirant cap a la part superior, la seq\u00fc\u00e8ncia de passos seria:</p> <ol> <li>Saltar 2 posicions</li> <li>Girar 90\u00ba dreta</li> <li>Saltar 2 posicions</li> <li>Saltar 3 posicions</li> <li>Girar 90\u00ba esquerra</li> <li>Saltar 1 posici\u00f3</li> <li>Girar 90\u00ba dreta</li> <li>Saltar 2 posicions</li> <li>Girar 90\u00ba esquerra</li> <li>Saltar 2 posicions</li> <li>Girar 90\u00ba esquerra</li> <li>Saltar 3 posicions</li> <li>Saltar 3 posicions</li> <li>Girar 90\u00ba dreta</li> <li>Saltar 3 posicions (o Saltar 1 i saltar 2)</li> </ol>"},{"location":"2.llenguatges/","title":"Llenguatge de programaci\u00f3","text":""},{"location":"2.llenguatges/#llenguatge-de-programacio","title":"Llenguatge de Programaci\u00f3","text":"<p>En l\u2019apartat anterior hem parlat dels algoritmes, com una seq\u00fc\u00e8ncia de passos que descriuen com resoldre determinat problema. Aquests algoritmes els podem representar mitjan\u00e7ant llenguatge natural, pseudocodi o diagrames, f\u00e0cilment comprensibles per les persones, per\u00f2 dif\u00edcilment per un ordinador.</p> <p>En el seg\u00fcent apartat abordarem els llenguatges de programaci\u00f3, mitjan\u00e7ant els quals expressarem els nostres algoritmes perqu\u00e8 puguen ser entesos per un ordinador.</p>"},{"location":"2.llenguatges/#que-es-un-llenguatge-de-programacio","title":"Qu\u00e8 \u00e9s un llenguatge de programaci\u00f3?","text":"<p>Segons l\u2019est\u00e0ndard ISO/IEC/IEEE 24765:2017, un llenguatge de programaci\u00f3 es defineix com:</p> <p>Un llenguatge artificial dissenyat per a expressar programes inform\u00e0tics.</p> <p>\u00c9s a dir, es tracta d\u2019un llenguatge dissenyat per a especificar el conjunt de regles que ha de realitzar un sistema inform\u00e0tic per a resoldre un problema.</p> <p>Per altra banda, no hem de confondre el terme llenguatge de programaci\u00f3 amb llenguatge inform\u00e0tic. Aquest \u00faltim fa refer\u00e8ncia a qualsevol llenguatge utilitzat per un ordinador. Aix\u00ed doncs, un llenguatge de programaci\u00f3 s\u00ed que seria un llenguatge inform\u00e0tic, per\u00f2 no a la inversa. Per exemple, els llenguatges de marques com XML o YAML, utilitzats per a especificar estructures de documents o configuracions, s\u00f3n llenguatges inform\u00e0tics, per\u00f2 no llenguatges de programaci\u00f3, ja que no ens permeten especificar aquesta s\u00e8rie de regles.</p>"},{"location":"2.llenguatges/#classificacio-dels-llenguatges-de-programacio","title":"Classificaci\u00f3 dels llenguatges de programaci\u00f3","text":"<p>Els llenguatges de programaci\u00f3 es poden classificar de diverses maneres, atenent a diferents criteris. Encara que en la pr\u00e0ctica aquesta classificaci\u00f3 no \u00e9s tan senzilla, ja que la majoria de llenguatges incorporen caracter\u00edstiques d\u2019altres llenguatges, establir una classificaci\u00f3 ens pot resultar \u00fatil per a con\u00e9ixer les possibilitats de certs llenguatges.</p>"},{"location":"2.llenguatges/#classificacio-segons-el-nivell-dabstraccio","title":"Classificaci\u00f3 segons el nivell d\u2019abstracci\u00f3","text":"<p>Amb el nivell d\u2019abstracci\u00f3 ens referim a la proximitat o llunyania al llenguatge que ent\u00e9n un ordinador. Segons aix\u00f2, podem classificar-los en:</p> <ul> <li>Llenguatges de baix nivell: Es tracta dels llenguatges amb un nivell d\u2019abstracci\u00f3 m\u00e9s baix, o el que \u00e9s el mateix, m\u00e9s propers a l\u2019ordinador i espec\u00edfics per a cada tipus de processador. L\u2019exemple m\u00e9s clar seria el llenguatge ensamblador.</li> <li>Llenguatges d\u2019alt nivell: S\u00f3n els de major nivell d\u2019abstracci\u00f3, per la qual cosa es troben m\u00e9s propers al llenguatge hum\u00e0. Llenguatges com Java o Python entrarien dins d\u2019aquesta classe.</li> <li>Llenguatges de nivell intermedi: Es tracta de llenguatges amb capacitats d\u2019alt nivell per\u00f2 que mantenen algunes de les qualitats dels llenguatges de baix nivell. El llenguatge de nivell intermedi per excel\u00b7l\u00e8ncia seria el llenguatge C.</li> </ul> <p>Alguns autors \u00fanicament distingeixen entre llenguatges d\u2019alt i baix nivell. En aquest cas, el llenguatge C es classifica com un llenguatge d\u2019alt nivell.</p>"},{"location":"2.llenguatges/#classificacio-segons-el-proposit","title":"Classificaci\u00f3 segons el prop\u00f2sit","text":"<p>Segons per a qu\u00e8 estiguen dissenyats, els llenguatges de programaci\u00f3 es poden classificar en:</p> <ul> <li>Llenguatges de prop\u00f2sit general: Dissenyats per a realitzar qualsevol tipus de tasca, i que comprendrien llenguatges com C, C++, C#, Python o Java.</li> <li>Llenguatges de prop\u00f2sit espec\u00edfic: Pensats per a una tasca m\u00e9s espec\u00edfica. Per posar algun exemple, tenim PHP per al desenvolupament web o R, orientat a l\u2019an\u00e0lisi estad\u00edstica, i utilitzat en camps com l\u2019aprenentatge autom\u00e0tic o la bioinform\u00e0tica.</li> </ul>"},{"location":"2.llenguatges/#classificacio-segons-levolucio-historica","title":"Classificaci\u00f3 segons l\u2019evoluci\u00f3 hist\u00f2rica","text":"<p>Els llenguatges de programaci\u00f3 han evolucionat amb la inform\u00e0tica, incrementant el seu nivell d\u2019abstracci\u00f3. Atenent a aix\u00f2, podem diferenciar cinc generacions de llenguatges:</p> <ul> <li>1GL: Llenguatges de primera generaci\u00f3. Codi m\u00e0quina, interpretable directament pel processador i el codi del qual era emmagatzemat en targetes perforades.</li> <li>2GL: Llenguatges de segona generaci\u00f3. S\u2019introdueix l\u2019assemblador, amb mnemot\u00e8cnics per a representar les instruccions m\u00e0quina.</li> <li>3GL: Llenguatge de tercera generaci\u00f3. Llenguatges moderns dissenyats per a facilitar la programaci\u00f3. Es tracta dels m\u00e9s actuals hui en dia, com C o Java.</li> <li>4GL: Llenguatges de quarta generaci\u00f3. Inclouen llenguatges amb un major nivell d\u2019abstracci\u00f3 (propers al llenguatge natural), i amb capacitat per a treballar amb conjunts d\u2019informaci\u00f3 m\u00e9s grans. Com a exemples tenim NATURAL i PL/SQL.</li> <li>5GL: Llenguatges de cinquena generaci\u00f3. M\u00e9s propers a la l\u00f2gica humana, pensats per a l\u2019especificaci\u00f3 del problema i les seues condicions, deixant la seua resoluci\u00f3 a l\u2019ordinador. Un exemple d'estos llenguatges \u00e9s Prolog.</li> </ul>"},{"location":"2.llenguatges/#classificacio-segons-la-forma-dexecutar-se","title":"Classificaci\u00f3 segons la forma d'executar-se","text":"<p>Segons la forma d'execuci\u00f3, podem distingir entre:</p> <ul> <li>Llenguatges compilats: Passen per un proc\u00e9s de traducci\u00f3 (compilaci\u00f3) que converteix el codi complet en llenguatge de programaci\u00f3 a codi en llenguatge m\u00e0quina. C i C++ s\u00f3n llenguatges compilats.</li> <li>Llenguatges interpretats: No necessiten un proc\u00e9s de compilaci\u00f3, per\u00f2 requereixen d'un int\u00e8rpret que tradueix instrucci\u00f3 a instrucci\u00f3 a codi m\u00e0quina. Python, per exemple, \u00e9s un llenguatge interpretat.</li> </ul> <p>Com podem veure, no s'han mencionat llenguatges com Java o C#, ja que aquests requereixen realment d'ambd\u00f3s processos: S\u00f3n compilats, per\u00f2 en lloc de fer-ho a codi m\u00e0quina ho fan a un codi intermedi (bytecode) que \u00e9s interpretat per una m\u00e0quina virtual.</p>"},{"location":"2.llenguatges/#classificacio-segons-lestil-o-paradigma-de-programacio","title":"Classificaci\u00f3 segons l'estil o paradigma de programaci\u00f3","text":"<p>Encara que els llenguatges m\u00e9s moderns suporten ambd\u00f3s estils de programaci\u00f3, podem distingir llenguatges basats en:</p> <ul> <li>Programaci\u00f3 imperativa: S'indica com realitzar una tasca, indicant els seus passos. Dins d'aquesta podem distingir entre:<ul> <li>Programaci\u00f3 estructurada: Que inclou estructures de control condicionals i repetitives als passos per resoldre un problema (Ex. C).</li> <li>Programaci\u00f3 procedimental/modular: On es divideix un problema en parts m\u00e9s xicotetes o subprogrames (Ex. C).</li> <li>Programaci\u00f3 orientada a objectes: Que aborda la resoluci\u00f3 de problemes mitjan\u00e7ant el modelatge d'objectes amb determinat comportament (Ex. C#, Java).</li> </ul> </li> <li>Programaci\u00f3 declarativa: S'indica qu\u00e8 fer, sense preocupar-se de com. Dins de la programaci\u00f3 declarativa trobem:<ul> <li>Programaci\u00f3 funcional: Realitzen les seues tasques mitjan\u00e7ant l'avaluaci\u00f3 de funcions de forma recursiva (Ex. Lisp/Haskell).</li> <li>Programaci\u00f3 l\u00f2gica: Realitzen operacions mitjan\u00e7ant l'\u00fas de la l\u00f2gica formal matem\u00e0tica (Ex. Prolog).</li> </ul> </li> </ul>"},{"location":"2.llenguatges/#classificacio-segons-el-lloc-dexecucio","title":"Classificaci\u00f3 segons el lloc d'execuci\u00f3","text":"<p>Segurament, has sentit parlar de desenvolupadors de backend, frontend o full-stack. Aquests perfils estan associats generalment al m\u00f3n d'aplicacions web, o m\u00e9s en general a aplicacions client-servidor. En aquests tipus d'aplicaci\u00f3, la tecnologia utilitzada per programar la part client d'una aplicaci\u00f3 pot ser diferent de la utilitzada en el servidor. Aix\u00ed doncs, distingim:</p> <ul> <li>Llenguatges de servidor (server-side o backend): Utilitzats potencialment en aplicacions de servidor, com puga ser PHP.</li> <li>Llenguatges de client (client-side o frontend): S'executen potencialment en el client. Per als serveis web, el client seria el propi navegador web, que executaria codi JavaScript.</li> </ul> <p>A la combinaci\u00f3 d'ambdues tecnologies se li sol con\u00e9ixer com a fullstack.</p> <p>Els llenguatges m\u00e9s importants</p> <p>Voleu aprendre un nou llenguatge de programaci\u00f3. Per on comencem? Quin llenguatge utilitzar\u00edeu?</p> <p>Per a respondre a aix\u00f2, haur\u00edem en primer lloc de plantejar-nos quin tipus d'aplicacions desitgem programar, i despr\u00e9s, veure quina \u00e9s la millor opci\u00f3 entre elles.</p> <p>Un bon punt de partida \u00e9s observar les tend\u00e8ncies de mercat i quins llenguatges de programaci\u00f3 tenen major \u00fas i projecci\u00f3 en l'actualitat.</p> <p>Consulta en Internet (l'informe The State of the Octoverse de Github, o l'\u00edndex TIOBE poden ser un punt de partida) quins s\u00f3n els 5 llenguatges de programaci\u00f3 m\u00e9s utilitzats actualment, i crea una llista amb la seg\u00fcent informaci\u00f3 sobre cadascun d'ells: Llenguatge, nivell d'abstracci\u00f3, prop\u00f2sit, si \u00e9s compilat o interpretat i quin paradigma o paradigmes de programaci\u00f3 utilitza.</p> <p>Un projecte inform\u00e0tic</p> <p>Un company t\u00e9 en ment un projecte que podria canviar-nos la vida! Ens conta que es tracta d'una aplicaci\u00f3 per a dispositius m\u00f2bils que posa en contacte a persones amb interessos comuns en la seua zona, per a organitzar quedades i esdeveniments.</p> <p>La idea del nostre company \u00e9s posar-la en marxa com m\u00e9s prompte millor, i vol que l'ajudem en el desenvolupament. El primer que ens pregunta \u00e9s: Quin llenguatge de programaci\u00f3 utilitzem? Quina seria la teua resposta?</p> <p>Claus de resoluci\u00f3</p> <p>La idea del nostre company, tot cal dir-ho, \u00e9s poc concreta per\u00f2 bastant ambiciosa. Observeu que vol una aplicaci\u00f3 per a dispositius m\u00f2bils, per\u00f2 que a m\u00e9s, a trav\u00e9s d'Internet connecte a diversos usuaris. Aix\u00f2 ens porta a pensar que haurem d'oferir algun tipus de servei en Internet. Entren doncs el que serien dues parts ben diferenciades. Per una part, una aplicaci\u00f3 client, que \u00e9s la que s'utilitzar\u00e0 en els m\u00f2bils, i una part de servidor. Aquestes dues parts, no hauran de ser desenvolupades en el mateix llenguatge, ja que existeixen unes tecnologies espec\u00edfiques per al desenvolupament d'aplicacions m\u00f2bils, i altres espec\u00edfiques per a servidors o aplicacions de servidor.</p>"},{"location":"3.codi_font_executable/","title":"Del codi font a l'executable","text":""},{"location":"3.codi_font_executable/#del-codi-font-al-codi-executable","title":"Del codi font al codi executable","text":"<p>Els desenvolupadors solen expressar els programes en llenguatges de programaci\u00f3 d'alt nivell, que no poden ser executats directament per un ordinador. Aquests programes requeriran d'un proc\u00e9s de traducci\u00f3 d'aquest codi d'alt nivell a un llenguatge que puga entendre i interpretar el propi ordinador, conegut com a llenguatge m\u00e0quina. En aquest apartat anem a veure les diferents aproximacions que existeixen per generar aquests programes executables.</p>"},{"location":"3.codi_font_executable/#traductors-compiladors-i-interprets","title":"Traductors, compiladors i int\u00e8rprets","text":"<p>Els programes encarregats de la traducci\u00f3 de llenguatges d'alt nivell a codi m\u00e0quina es coneixen com a traductors i poden ser de dos tipus:</p> <ul> <li>Compiladors: Tradueixen un programa expressat en llenguatge d'alt nivell en la seua totalitat a codi m\u00e0quina. En aquest proc\u00e9s de traducci\u00f3, podem detectar certs errors en els programes abans de generar els executables. Alguns dels llenguatges compilats m\u00e9s comuns s\u00f3n C o C++.</li> <li>Int\u00e8rprets: Realitzen la traducci\u00f3 i l'execuci\u00f3 l\u00ednia a l\u00ednia, per la qual cosa no generaran un nou fitxer executable. En aquests traductors, si no hi ha un pre-processat previ, els errors de programaci\u00f3 no es detecten fins que el programa ja est\u00e0 en execuci\u00f3.</li> </ul>"},{"location":"3.codi_font_executable/#codi-font-codi-objecte-i-codi-executable","title":"Codi font, codi objecte i codi executable","text":"<p>L'est\u00e0ndard ISO/IEC/IEEE 24765:2017 ofereix les seg\u00fcents definicions sobre codi, llenguatge i programa font:</p> <ul> <li>Codi font: Instruccions de computadora i definicions de dades expressades en una forma adequada per a l'entrada a un assemblador, compilador o altre traductor.</li> <li>Llenguatge font: Idioma en el qual es representa l'entrada a un proc\u00e9s de traducci\u00f3 assistida per la m\u00e0quina.</li> <li>Programa font: Programa d'ordinador que ha de ser compilat, assemblat o tradu\u00eft d'una altra manera per ser executat per un ordinador.</li> </ul> <p>Per altra banda, l'est\u00e0ndard defineix el codi objecte com:</p> <ul> <li>Codi objecte: Instruccions d'un ordinador i definicions de dades produ\u00efdes per un assemblador o compilador.</li> </ul> <p>En altres paraules, el codi objecte \u00e9s el que obtenim mitjan\u00e7ant un proc\u00e9s de compilaci\u00f3 del codi font. Aquest codi objecte generalment \u00e9s llenguatge m\u00e0quina o bytecode, i es distribueix en un o diversos fitxers, per\u00f2 no \u00e9s encara executable per l'ordinador. Perqu\u00e8 siga executable, requereix d'una \u00faltima fase d'enlla\u00e7at on es combinen els diferents fitxers en codi objecte, juntament amb les biblioteques del sistema necess\u00e0ries.</p> <p>Aquest proc\u00e9s general es mostra en el seg\u00fcent diagrama:</p> <p></p> <p>Com podem veure, el proc\u00e9s per obtenir un executable passa per tres fases:</p> <ol> <li>Fase d'edici\u00f3: Generem el codi font del programa en un llenguatge d'alt nivell i utilitzant un editor de codi.</li> <li>Fase de traducci\u00f3 o compilaci\u00f3: Un compilador genera el codi objecte a partir del codi font.</li> <li>Fase d'enlla\u00e7at: Es combinen els diferents fitxers en codi objecte, enlla\u00e7ant les biblioteques necess\u00e0ries i generant el codi executable de l'aplicaci\u00f3.</li> </ol>"},{"location":"3.codi_font_executable/#tecnologies-de-virtualitzacio-java-i-net","title":"Tecnologies de virtualitzaci\u00f3: Java i .NET","text":"<p>Quan parlem de virtualitzaci\u00f3, ens referim a la possibilitat d'executar una o diverses m\u00e0quines virtuals sobre una \u00fanica m\u00e0quina f\u00edsica, abstraient aix\u00ed els seus recursos hardware.</p> <p>Aquesta virtualitzaci\u00f3 pot ser de dos tipus: de sistema o de proc\u00e9s. Les m\u00e0quines virtuals de sistema, o de hardware, permeten que cada m\u00e0quina posse\u00efsca el seu propi sistema operatiu, mentre que les m\u00e0quines virtuals de proc\u00e9s o aplicaci\u00f3 s'executen com un proc\u00e9s m\u00e9s del sistema operatiu, i serveixen com a pont entre el codi font d'alt nivell i el codi m\u00e0quina. Aquestes m\u00e0quines ens proporcionen un entorn d'execuci\u00f3 (runtime) independent del hardware i del sistema operatiu, de manera que permeten el desenvolupament multiplataforma.</p> <p>Basant-se en aquesta idea de m\u00e0quina virtual de proc\u00e9s, tenim dos grans entorns d'execuci\u00f3: La m\u00e0quina virtual de Java (Java Virtual Machine, JVM) d'Oracle, i el Runtime de llenguatge com\u00fa (Common Language Runtime, CLR) de l'entorn .Net de Microsoft.</p> <p>El funcionament d'aquests runtimes es basa en compilar els fonts per a una m\u00e0quina virtual de proc\u00e9s determinada (JVM o CLR). El resultat d'aquesta compilaci\u00f3 \u00e9s un codi intermedi, anomenat bytecode: Java bytecode en el cas de la JVM i Common Intermediate Language o CIL en el cas del CLR de Microsoft.</p> <p>Aquest codi intermedi \u00e9s el mateix per a qualsevol plataforma, sent la pr\u00f2pia m\u00e0quina virtual (JVM o CLR) la que s'encarrega d'interpretar-lo i executar-lo en el sistema operatiu subjacent.</p> <p></p> <p>El concepte de multiplataforma</p> <p>En inform\u00e0tica, amb el terme plataforma ens referim a la combinaci\u00f3 entre l'ordinador o dispositiu hardware i el seu sistema operatiu, sobre el qual podrem instal\u00b7lar i executar software.</p> <p>Aix\u00ed doncs, quan parlem de multiplataforma, ens referim a aquell software que pot ser executat en diferents plataformes. Una aplicaci\u00f3 multiplataforma ser\u00e0 doncs aquella que puga executar-se en diferents plataformes. Com a exemple d'algunes de les aplicacions multiplataforma m\u00e9s comunes, podr\u00edem citar LibreOffice, Mozilla Firefox o l'editor gr\u00e0fic Gimp.</p>"},{"location":"3.codi_font_executable/#sobre-codi-font-i-software-lliure","title":"Sobre codi font i software lliure","text":"<p>En Sistemes Inform\u00e0tics es parla de software lliure i propietari. Recordeu que el software lliure es basa en quatre llibertats: d'execuci\u00f3, d'adaptaci\u00f3, de redistribuci\u00f3 i de millora. Algunes d'elles, com la d'adaptaci\u00f3 i millora, es diu que requereixen del codi font.</p> <p>Despr\u00e9s del que hem vist en aquest apartat, has d'entendre millor aquest concepte de software lliure o de fonts obertes, enfront del software propietari, on l'\u00fanic que es distribueix \u00e9s el codi executable, i no el font.</p>"},{"location":"3.codi_font_executable/#exemples-practics","title":"Exemples pr\u00e0ctics","text":"<p>Anem a comen\u00e7ar amb alguna cosa pr\u00e0ctica ja. A continuaci\u00f3 se us proporcionaran diversos fragments de codi font en diferents llenguatges. No \u00e9s necessari que enteneu ara el qu\u00e8 fan, nom\u00e9s els necessitarem per veure el proc\u00e9s per arribar als executables.</p>"},{"location":"3.codi_font_executable/#exemple-1-python","title":"Exemple 1. Python","text":"<p>El seg\u00fcent fragment, escriu el missatge \"Hola M\u00f3n\" per la pantalla:</p> <pre><code>print (\"Hola M\u00f3n!\")\n</code></pre> <p>Copieu el contingut a un fitxer anomentat <code>hola.py</code>, i obriu una terminal en la carpet aon es troba. </p> <p>Per llan\u00e7ar l'int\u00e8rpret de Python, escriviu:</p> <pre><code>$ python3 hola.py\n</code></pre> <p>Obseveu el resultat de l'execuci\u00f3 anteror. S'ha generat algun fitxer addicional?</p> <p>Executeu l'ordre <code>file</code> sobre el fitxer (<code>file hola.py</code>). De quin tipus de fitxer es tracta?</p>"},{"location":"3.codi_font_executable/#exemple-2-c","title":"Exemple 2. C","text":"<p>Creeu altre fitxer de text amb el seg\u00fcent contingut:</p> <pre><code>#include &lt;stdio.h&gt;\nint main() {\n   printf(\"Hello World!\\n\");\n   return 0;\n}\n</code></pre> <p>Guardeu-lo amb el nom <code>hola.c</code>, i executeu el seg\u00fcent des de la mateixa carpeta on es troba el fitxer:</p> <pre><code>cc hola.c\n</code></pre> <p>Ha fet alguna cosa? Comproveu ara si s'ha generat algun fitxer. Si \u00e9s aix\u00ed, podr\u00edeu provar a executar-lo directament? Quin tipus de fitxer \u00e9s cadascun?</p> <p>Si voleu que en lloc de generar <code>a.out</code> genere altre nom, podem fer \u00fas del par\u00e0metre <code>-o</code>, per exemple: <code>cc hola.c -o hola.exe</code></p>"},{"location":"3.codi_font_executable/#exemple-3-java","title":"Exemple 3. Java","text":"<p>Fem ara el mateix amb el seg\u00fcent contingut, i el guardem com a <code>Hola.java</code> (la maj\u00fascula \u00e9s important!):</p> <pre><code>public class Hola {\n    public static void main(String[] args) {\n        System.out.println(\"Hola M\u00f3n!\");\n    }\n}\n</code></pre> <p>Fet aix\u00f2, ens tornem a situar en la mateixa carpeta on tinguem guardat l'arxiu i llancem la seg\u00fcent ordre:</p> <pre><code>javac Hola.java\n</code></pre> <p>S'ha generat algun fitxer nou? Quin contingut t\u00e9? De quin tipus \u00e9s?</p> <p>Ara podeu llan\u00e7ar:</p> <pre><code>java Hola\n</code></pre> <p>Per veure'n el resultat. S'ha generat algun fitxer nou en aquest cas?</p> <p>Conclussions</p> <p>Quines conclussions extreus dels exemples anteriors? Per a qu\u00e8 serveix l'ordre <code>python3</code>? I <code>cc</code>? I <code>java</code> i <code>javac</code>?</p> <p>Curiositat: examinant el bytecode</p> <p>Si voleu examinar el bytecode generat per Java, podeu fer \u00fas de:</p> <pre><code>$ javap -c Hola.class \n</code></pre>"},{"location":"4.desenvolupament/","title":"Desenvolupament d'aplicacions","text":""},{"location":"4.desenvolupament/#fases-en-el-desenvolupament-duna-aplicacio","title":"Fases en el desenvolupament d'una aplicaci\u00f3","text":"<p>El desenvolupament d'una aplicaci\u00f3 passa per diferents fases, que abasten des de la concepci\u00f3 d'aquesta fins al resultat final. A grans trets, diferenciem cinc fases: An\u00e0lisi, Disseny, Codificaci\u00f3, Implantaci\u00f3 i Manteniment.</p> <p>En general, tots els models seguiran d'una manera o altra aquestes fases. A m\u00e9s, segons el paradigma de programaci\u00f3 en qu\u00e8 ens basem, utilitzaran diferents t\u00e8cniques i eines.</p>"},{"location":"4.desenvolupament/#fase-danalisi","title":"Fase d'an\u00e0lisi","text":"<p>Es determinen els requisits que tindr\u00e0 l'aplicaci\u00f3, a trav\u00e9s d'una an\u00e0lisi del problema. Tamb\u00e9 s'inclou una cerca de possibles solucions en el mercat. A m\u00e9s dels requisits funcionals de l'aplicaci\u00f3, es especificaran els models de dades i comportament que aquesta tindr\u00e0. En aquesta fase, s'utilitzen principalment eines de tipus gr\u00e0fic:</p> <ul> <li>Per especificar el comportament del sistema, podem utilitzar Diagrames de flux de dades en an\u00e0lisi estructurat, o b\u00e9 Diagrames de casos d'\u00fas, diagrames de seq\u00fc\u00e8ncia o diagrames d'estats, en metodologies orientades a objectes.</li> <li>Per especificar el model de dades i con\u00e8ixer aix\u00ed les estructures de dades de l'aplicaci\u00f3 i les seues relacions, podem utilitzar diagrames Entitat-Relaci\u00f3 en l'\u00e0mbit de les bases de dades, diagrames de classes en metodologies orientades a objectes, o Diccionaris de dades en programaci\u00f3 estructurada.</li> <li>Per descriure les interf\u00edcies d'usuari, podem utilitzar prototips mitjan\u00e7ant representacions de baixa fidelitat o wireframes, prototips o representacions est\u00e8tiques en forma de maqueta o mockup.</li> </ul>"},{"location":"4.desenvolupament/#fase-de-disseny","title":"Fase de disseny","text":"<p>A partir dels requeriments de la fase d'an\u00e0lisi, i tenint en compte els recursos del sistema (hardware i software), creem la soluci\u00f3 al problema. Aix\u00ed com en la fase d'an\u00e0lisi es determinava \"Qu\u00e8\" es vol implementar, en aquesta fase s'establir\u00e0 \"Com\". Segons el paradigma utilitzat, disposarem de diverses eines:</p> <ul> <li>Per al disseny de les estructures de dades i la seua persist\u00e8ncia, utilitzarem fitxers, bases de dades relacionals, orientades a objectes o noSQL. Per altra banda, haurem de dissenyar tamb\u00e9 les estructures de dades i les classes de les quals es componga l'aplicaci\u00f3.</li> <li>Per al disseny del comportament, s'utilitzen t\u00e8cniques de disseny modular com la divisi\u00f3 descendent en m\u00f2duls funcionals, i de disseny de procediments, on especifiquem els algoritmes de cada m\u00f2dul mitjan\u00e7ant diagrames de flux o pseudocodi. En el cas de la programaci\u00f3 orientada a objectes, dissenyem el funcionament dels m\u00e8todes que suporten els objectes, mitjan\u00e7ant diagrames d'estats i d'activitats.</li> </ul>"},{"location":"4.desenvolupament/#fase-de-codificacio-o-implementacio","title":"Fase de codificaci\u00f3 o implementaci\u00f3","text":"<p>Es transformen els algoritmes dissenyats en la fase anterior en programes expressats en determinat llenguatge de programaci\u00f3. A m\u00e9s, s'han de realitzar proves per assegurar la qualitat del software.</p>"},{"location":"4.desenvolupament/#fase-dimplantacio","title":"Fase d'implantaci\u00f3","text":"<p>Implica la posada en producci\u00f3 del producte software, la seua instal\u00b7laci\u00f3 en els sistemes, realitzaci\u00f3 de proves d'acceptaci\u00f3, migraci\u00f3 de la informaci\u00f3 i reempla\u00e7ament del sistema anterior. A m\u00e9s, s'haur\u00e0 de proveir a l'usuari final de la documentaci\u00f3 per a l'explotaci\u00f3 i el bon \u00fas del sistema.</p>"},{"location":"4.desenvolupament/#fase-de-manteniment","title":"Fase de manteniment","text":"<p>On es corregeixen errors no detectats pr\u00e8viament, es realitzen millores en la funcionalitat de l'aplicaci\u00f3 o s'afegeixen noves. Diferenciem el manteniment correctiu, en el qual es detecten errors de codificaci\u00f3 no detectats, el manteniment adaptatiu, en el qual adaptem l'aplicaci\u00f3 a nous entorns, i el manteniment perfectiu, on s'afegeixen noves funcionalitats a l'aplicaci\u00f3.</p>"},{"location":"4.desenvolupament/#models-de-desenvolupament-de-software","title":"Models de desenvolupament de software","text":"<p>Els models de desenvolupament de software suposen diferents marcs de treball per abordar el cicle de vida del software.</p>"},{"location":"4.desenvolupament/#cicle-de-vida-en-cascada","title":"Cicle de vida en cascada","text":"<p>Es tracta del model cl\u00e0ssic, segons el qual les diferents fases del cicle de vida s'ordenen de forma seq\u00fcencial, de manera que la documentaci\u00f3 generada en una fase serveix com a punt de partida per a la seg\u00fcent. En aquest model, per comen\u00e7ar una fase, hem d'haver acabat completament l'anterior.</p> <p></p> <p>Es tracta d'un proc\u00e9s met\u00f2dic, i que permet establir punts de control intermedis per comprovar l'avan\u00e7 del projecte. El principal inconvenient que presenta \u00e9s que \u00e9s poc realista, ja que pressuposa que el client tindr\u00e0 clars els requisits de l'aplicaci\u00f3 des d'un primer moment, i aix\u00f2 rara vegada \u00e9s aix\u00ed.</p>"},{"location":"4.desenvolupament/#models-de-desenvolupament-evolutiu","title":"Models de desenvolupament evolutiu","text":"<p>Es tracta de models on el software va evolucionant a trav\u00e9s d'ajustos i millores cont\u00ednues per part del client. Dins d'aquest model existeixen diversos enfocaments:</p>"},{"location":"4.desenvolupament/#construccio-de-prototips","title":"Construcci\u00f3 de prototips","text":"<p>Es basa en la introducci\u00f3 del prototipat com una eina per a la validaci\u00f3 de requisits per part del client. Es construeix un prototip de l'aplicaci\u00f3, de manera que el client puga corregir errors en la presa de requisits abans de comen\u00e7ar amb el desenvolupament.</p> <p>En tot cas, el client ha de ser conscient que es tracta d'un prototip per a la validaci\u00f3 de requisits, i no el producte en si. En alguns desenvolupaments, el prototip es desenvolupa mitjan\u00e7ant eines espec\u00edfiques per a aix\u00f2, sent descartat una vegada validat per donar pas al desenvolupament.</p> <p></p>"},{"location":"4.desenvolupament/#model-iteratiu-i-incremental","title":"Model iteratiu i incremental","text":"<p>Aquest model combina les fases del model en cascada, aplicades de forma repetida, juntament amb la interactivitat amb el client que aporten el desenvolupament de prototips.</p> <p>En aquest cas, el prototip no es descarta, sin\u00f3 que es reutilitza, i en diferents iteracions del model en cascada, va incrementant la seua funcionalitat fins a convertir-se en l'aplicaci\u00f3 final (prototipat evolutiu).</p> <p>En aquest model, en un primer moment es realitza una an\u00e0lisi general del sistema i es especifiquen les funcionalitats que aquest haur\u00e0 de tenir, de manera que segons aquestes es planifiquen les diferents iteracions que es realitzaran durant el desenvolupament.</p> <p></p>"},{"location":"4.desenvolupament/#model-en-espiral","title":"Model en espiral","text":"<p>Es tracta d'un model similar a l'iteratiu, amb la principal difer\u00e8ncia que es tracta d'un proc\u00e9s continu durant tota la vida \u00fatil del software. Aix\u00ed com en el model iteratiu i incremental es coneixia d'antuvi quantes iteracions es farien, en el model en espiral no existeix un nombre preestablert d'iteracions.</p> <p></p> <p>En aquest model, cada iteraci\u00f3 es pot plantejar com un projecte diferent, fins i tot utilitzant qualsevol dels models anteriors, i no requereix d'una planificaci\u00f3 completa inicialment, podent-se adaptar el desenvolupament al ritme de l'equip de treball i als requeriments del client.</p> <p>Cas pr\u00e0ctic: L'efecte bola de neu</p> <p>En una empresa de desenvolupament de software s'acaba de descartar un projecte en el qual es porten mesos treballant, i amb aix\u00f2 s'han perdut diverses desenes de milers d'euros d'inversi\u00f3 i moltes hores de treball. Quan es van comen\u00e7ar els contactes amb el client, es van especificar uns requisits concrets per a l'aplicaci\u00f3, i despr\u00e9s de mesos de treball, seguint un model de desenvolupament en cascada, el client no ha quedat satisfet amb el resultat, perqu\u00e8 no \u00e9s el que esperava i ha decidit cancel\u00b7lar el contracte. Quin ha estat el problema? Com es podria haver resolt?</p> <p>Cas pr\u00e0ctic 4: La web de l'empresa</p> <p>Anem a desenvolupar un projecte per a l'empresa, i hem d'organitzar el nostre equip de treball. El projecte consistir\u00e0 a crear una p\u00e0gina web per a l'empresa, amb la informaci\u00f3 necess\u00e0ria sobre els diferents departaments, a qu\u00e8 es dedica, etc\u00e8tera. En quines fases dividiries el proc\u00e9s? Quin model de desenvolupament elegiries?</p> <p>A tenir en compte</p> <p>Per abordar amb \u00e8xit un projecte d'aquestes caracter\u00edstiques podr\u00edem adoptar qualsevol dels models evolutius. Les reunions amb els responsables de l'empresa haurien de ser freq\u00fcents, i donar-los l'oportunitat de validar tot el treball que es va fent. Caberia tant un desenvolupament iteratiu-incremental com en espiral. Les fases serien les habituals: un primer an\u00e0lisi del que es vol afegir a la web, un disseny de com volem que aquesta es veja i es comporte, una de codificaci\u00f3, i la implantaci\u00f3 i el manteniment.</p>"},{"location":"5.metodologies_agils/","title":"Metodologies de desenvolupament \u00e0gils","text":"<p>La nostra societat es troba en constant canvi, i els sectors productius han d'adaptar-se a aix\u00f2. Hui en dia, les empreses i els equips de desenvolupament requereixen formes d'organitzar-se que siguen capaces d'adaptar-se r\u00e0pidament a aquests canvis.</p> <p>Les metodologies tradicionals, encara que s\u00f3n molt sistem\u00e0tiques, s\u00f3n massa r\u00edgides per a enfrontar-se a aquesta necessitat d'adaptaci\u00f3 al canvi, per la qual cosa s\u00f3n necess\u00e0ries noves metodologies de desenvolupament, m\u00e9s \u00e0gils i amb capacitat d'assumir els reptes que planteja la societat actual.</p>"},{"location":"5.metodologies_agils/#metodologies-de-desenvolupament-agil","title":"Metodologies de desenvolupament \u00e0gil","text":"<p>Les metodologies de desenvolupament \u00e0gils sorgeixen com a resposta a la necessitat de respondre de forma m\u00e9s r\u00e0pida als constants canvis en els requisits que pot patir un projecte.</p> <p>El desenvolupament \u00e0gil t\u00e9 en consideraci\u00f3 que els requisits d'un producte poden evolucionar, i que per tant, les solucions han d'evolucionar amb ells. Aix\u00ed doncs, recull idees del desenvolupament iteratiu i evolutiu, i divideix el proc\u00e9s de desenvolupament en xicotets blocs que aporten valor al producte final. Aquests blocs seran abordats per diferents equips organitzats, que col\u00b7laboraran entre ells. El principal mecanisme de control d'aquests desenvolupaments ser\u00e0 la retroalimentaci\u00f3 amb el client, sent sotmesos a freq\u00fcents revisions i adaptacions, a trav\u00e9s de lliuraments freq\u00fcents del producte.</p> <p>En ess\u00e8ncia, la idea d'aquestes metodologies \u00e9s disposar d'un producte avaluable i amb valor per al client com m\u00e9s prompte millor.</p>"},{"location":"5.metodologies_agils/#scrum","title":"Scrum","text":"<p>Una de les metodologies \u00e0gils m\u00e9s conegudes \u00e9s Scrum, que ens ofereix un marc de treball per a la gesti\u00f3 de projectes de forma \u00e0gil.</p> <p>L'\u00e8xit d'aquest marc o framework est\u00e0 en assumir que els requisits d'un projecte no estaran completament definits, que el client pot canviar de criteri en un moment donat, i s'adapta a aix\u00f2.</p> <p>Scrum se centra doncs en maximitzar la rapidesa dels lliuraments en els termes previstos, en la capacitat d'adaptaci\u00f3 de l'equip i en els canvis que poden patir els requisits.</p>"},{"location":"5.metodologies_agils/#1-com-funciona-scrum","title":"1. Com funciona Scrum?","text":"<p>Scrum funciona dividint el projecte en xicotetes tasques, cadascuna amb uns objectius molt concrets i que siguen assumibles en un espai de temps predeterminat. Aquest espai de temps es coneix com a sprint, i solen ser de dues setmanes, o com a molt d'un mes.</p> <p>Aquest marc de treball d\u00f3na molta import\u00e0ncia a la col\u00b7laboraci\u00f3 i la comunicaci\u00f3 entre els membres de l'equip, aix\u00ed com amb el client, el que implica la realitzaci\u00f3 de reunions de forma peri\u00f2dica.</p>"},{"location":"5.metodologies_agils/#2-organitzacio-de-lequip-de-treball","title":"2. Organitzaci\u00f3 de l'equip de treball","text":"<p>Scrum \u00e9s apropiada per a equips de treball relativament xicotets, d'al voltant de 10 persones.</p> <p>Els rols que s'adopten en aquest marc de treball s\u00f3n els seg\u00fcents:</p> <ul> <li>Scrum Master: \u00c9s el membre de l'equip que s'assegura que el framework s'aplica correctament. \u00c9s qui dirigeix les reunions, organitza els sprints, i protegeix l'equip de desenvolupament de qualsevol influ\u00e8ncia externa que el distraiga. No hem de confondre aquest rol amb el l\u00edder de l'equip (els equips s\u00f3n autoorganitzats) o el gestor del projecte, ja que el Scrum Master \u00e9s una guia en el proc\u00e9s, per\u00f2 no indica qu\u00e8 ni com s'ha de fer.</li> <li>Product Owner: Es tracta d'un representant del client, que defineix les necessitats del producte, les prioritza, i s'assegura que els resultats de l'equip s\u00f3n els adequats des de la perspectiva del negoci. Es tracta d'un rol m\u00e9s comercial, i que no interfereix en aspectes t\u00e8cnics amb l'equip de desenvolupament, servint d'enlla\u00e7 entre aquest i el client.</li> <li>Equip de desenvolupament: \u00c9s el responsable de lliurar les diferents parts del producte en cada sprint, aix\u00ed com el producte final. Es tracta d'equips autogestionats i autosuficients. Com hem comentat, solen ser equips xicotets, d'entre 3 i 10 membres, amb capacitats transversals a tot el cicle de vida (d'an\u00e0lisi, disseny, programaci\u00f3, proves i documentaci\u00f3), i que generalment es divideix en subequips de dues persones per abordar cada tasca.</li> </ul>"},{"location":"5.metodologies_agils/#3-reunions","title":"3. Reunions","text":"<p>Encara que Scrum assumeix que els requisits d'un projecte poden variar durant el seu desenvolupament, necessitem planificar uns objectius, per a dividir-los en les diferents tasques a realitzar.</p> <p>El nostre punt de partida \u00e9s una llista de tasques ja ordenades segons la prioritat, coneguda com a Product Backlog. Aquesta llista ha estat generada pel Product Owner atenent als objectius inicials plantejats pel client.</p> <p>A partir d'aquesta situaci\u00f3, les diferents reunions que planteja Scrum s\u00f3n:</p> <ul> <li> <p>Reuni\u00f3 de planificaci\u00f3 de l'sprint (Sprint planning): Es realitza abans de comen\u00e7ar l'sprint, i en ella es plantegen les tasques i objectius d'aquest, a partir de les tasques m\u00e9s priorit\u00e0ries del Product Backlog, aix\u00ed com el temps necessari per lliurar el producte al final de l'sprint. A la llista de tasques de l'sprint se li coneix com a Sprint Backlog. El temps suggerit per Scrum per a aquesta reuni\u00f3 de planificaci\u00f3 \u00e9s de 4 hores.</p> </li> <li> <p>Scrum diari (Daily Scrum): Es realitza generalment al comen\u00e7ament de cada jornada laboral, a una hora determinada, i en ell es sincronitzen les tasques de l'equip, comentant l'estat en qu\u00e8 est\u00e0 el treball de cada membre: qu\u00e8 es va fer durant la jornada d'ahir, qu\u00e8 es pret\u00e9n fer en la jornada actual i quins problemes han sorgit. Normalment es recomana una duraci\u00f3 d'uns 15 minuts per a aquesta reuni\u00f3.</p> </li> <li> <p>Revisi\u00f3 del treball realitzat (Sprint Review): En finalitzar cada sprint es fa una revisi\u00f3 de tot el proc\u00e9s, es mostren els resultats i es valora si s'han assolit els objectius. Sol incloure una demo per mostrar els resultats a la resta de l'equip, aix\u00ed com al client. La duraci\u00f3 recomanada en Scrum per a aquesta reuni\u00f3 \u00e9s de 2 hores.</p> </li> <li>Retrospectiva (Sprint Retrospective): Es realitza tamb\u00e9 en finalitzar cada sprint, i t\u00e9 per objectiu millorar el flux de treball del propi equip. En aquesta reuni\u00f3, d'un temps estimat d'1 hora i mitja, s'analitza la forma de treballar, els problemes sorgits en l'sprint anterior i es busquen solucions a aplicar en el seg\u00fcent sprint.</li> </ul> <p>Cas pr\u00e0ctic: Conflicte d'interessos</p> <p>En una reuni\u00f3 de revisi\u00f3 de sprint hem tingut alguns problemes amb determinades tasques que no s'han dut a terme correctament o no s'han acabat a temps. En la reuni\u00f3 de planificaci\u00f3 inicial, el Scrum Master ja va suggerir que determinats equips estaven sobrecarregats de treball, per\u00f2 el Product Owner va insistir que hi havia tasques que el client esperava veure prompte fetes. Qu\u00e8 creieu que ha passat?</p> <p>Cas pr\u00e0ctic: Seguim amb la web</p> <p>Seguint amb el cas anterior, quines modificacions faries en la forma de treballar per aplicar Scrum?</p> <p>A tenir en compte...</p> <p>Com hem comentat, Scrum no \u00e9s una metodologia com a tal, sin\u00f3 que suposa un marc de treball per a aquesta. Els principals canvis que suposaria en la nostra forma de treballar afectarien principalment a les reunions i la planificaci\u00f3. Una vegada reunits amb els responsables de l'empresa i definides les tasques, haur\u00edem de comen\u00e7ar a planificar els sprints, dividir en subequips l'equip de desenvolupament i assignar tasques a cada subgrup. Es plantejarien reunions di\u00e0ries per revisar l'estat del projecte i al final de cada sprint avaluar\u00edem el treball i mostrar\u00edem la demo de la web als responsables de l'empresa.</p>"}]}